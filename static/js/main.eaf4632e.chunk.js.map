{"version":3,"sources":["components/modalStyle.jsx","components/each-todo.component.jsx","components/all-todo-list.component.jsx","components/add-to-do.component.jsx","App.js","redux/reducers/todoReducer.js","redux/reducers/index.js","reportWebVitals.js","index.js"],"names":["customStyles","content","top","left","right","bottom","marginRight","transform","boxShadow","borderRadius","width","position","dateFormatList","EachTodo","todo","title","date","id","status","removeTask","completeTask","dispatch","useDispatch","useState","modalOpen","setModalOpen","editTitle","setEditTitle","editDate","setEditDate","className","onClick","JSON","stringify","slice","isOpen","ariaHideApp","onRequestClose","style","contentLabel","onSubmit","tasks","undefined","window","localStorage","getItem","parse","map","i","setItem","type","payload","value","onChange","e","target","defaultValue","moment","_d","format","Search","Input","AllTodoList","keyword","setKeyword","todos","useSelector","state","splice","preventDefault","toLowerCase","placeholder","enterButton","filter","includes","searched","AddToDo","setTitle","setDate","push","Date","required","App","initialState","rootReducer","combineReducers","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaf4632e.chunk.js","sourcesContent":["export const customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      boxShadow             : '0px -4px 12px rgba(23, 40, 83, 0.04)',\r\n      borderRadius          : '8px',\r\n      width                 : '606px',\r\n      position              : 'relative'\r\n    }\r\n};","import React, {useState} from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\nimport { customStyles } from './modalStyle';\r\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\nconst dateFormat = 'YYYY/MM/DD';\r\n\r\nconst EachTodo = ({todo: {title, date, id, status}, removeTask, completeTask}) => {\r\n    const dispatch = useDispatch()\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n    const [editTitle, setEditTitle] = useState(title)\r\n    const [editDate, setEditDate] = useState(date)\r\n    const handleChangeTitle = (e) => {\r\n        setEditTitle(e.target.value)\r\n    }\r\n    const handleChangeDate = (e) => {\r\n        setEditDate(e._d)\r\n    }\r\n    const editTask = () => {\r\n        let tasks = []\r\n        if(typeof window !== undefined) {\r\n            if(localStorage.getItem('tasks')) {\r\n                tasks = JSON.parse(localStorage.getItem(\"tasks\"))\r\n            }\r\n            tasks.map((todo, i) => {\r\n                if(todo.id === id) {\r\n                    tasks[i].title = editTitle\r\n                    tasks[i].date = editDate\r\n                }\r\n            });\r\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n            dispatch({\r\n                type: \"ADD_TO_TASKS\",\r\n                payload: tasks\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"flex-between-center border-top border-bottom pt-3 pb-3\">\r\n                <div className=\"col-side\">\r\n                    <button onClick={() => removeTask(id)} className=\"btn btn-danger right-radius-none\"><i className=\"fas fa-times\"></i></button>\r\n                    <button onClick={() => completeTask(id)} className=\"btn btn-success left-radius-none\"><i className=\"fas fa-check\"></i></button>\r\n                </div>\r\n                <p \r\n                    className={`mb-0 col-center ${status ? \"text-decoration-line-through\" : \"\"}`}\r\n                    onClick={() => {setModalOpen(true)}}\r\n                >\r\n                    {title}\r\n                </p>\r\n                <span className={`col-side ${status ? \"text-decoration-line-through\" : \"\"}`}>{JSON.stringify(date).slice(1,11)}</span>\r\n            </div>\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                ariaHideApp={false}\r\n                onRequestClose={()=> setModalOpen(false)}\r\n                style={customStyles}\r\n                contentLabel=\"Edit To do\"\r\n            >\r\n                <div className=\"close-modal\" onClick={()=> setModalOpen(false)}>X</div>\r\n                <h3 className=\"h3 text-center m-4\">Edit task</h3>\r\n                <form onSubmit={editTask} className=\"d-flex mb-4\">\r\n                    <input className=\"form-control\" type=\"text\" value={editTitle} onChange={handleChangeTitle}/>\r\n                    <DatePicker defaultValue={moment(JSON.stringify(editDate).slice(1,11), dateFormat)} onChange={handleChangeDate} format={dateFormatList} />\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                </form>   \r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default EachTodo;","import React, {useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {Input} from 'antd'\r\nimport EachTodo from './each-todo.component';\r\n\r\nconst { Search } = Input;\r\n\r\nconst AllTodoList = () => {\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    const {todos} = useSelector(state => ({...state}))\r\n    const dispatch = useDispatch()\r\n    const removeTask = (id) => {\r\n        let tasks = []\r\n        if(typeof window !== undefined) {\r\n            if(localStorage.getItem('tasks')) {\r\n                tasks = JSON.parse(localStorage.getItem(\"tasks\"))\r\n            }\r\n            tasks.map((todo, i) => {\r\n                if(todo.id === id) {\r\n                    tasks.splice(i, 1)\r\n                }\r\n            });\r\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n            dispatch({\r\n                type: \"ADD_TO_TASKS\",\r\n                payload: tasks\r\n            })\r\n        }\r\n    }\r\n    const completeTask = (id) => {\r\n        let tasks = []\r\n        if(typeof window !== undefined) {\r\n            if(localStorage.getItem('tasks')) {\r\n                tasks = JSON.parse(localStorage.getItem(\"tasks\"))\r\n            }\r\n            tasks.map((todo, i) => {\r\n                if(todo.id === id) {\r\n                    tasks[i].status = !tasks[i].status\r\n                }\r\n            });\r\n            localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n            dispatch({\r\n                type: \"ADD_TO_TASKS\",\r\n                payload: tasks\r\n            })\r\n        }\r\n    }\r\n    const handleSearchChange = (e) => {\r\n        e.preventDefault()\r\n        setKeyword(e.target.value.toLowerCase())\r\n    };\r\n    const searched = (keyword) => (todo) => todo.title.toLowerCase().includes(keyword)\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <Search value={keyword} onChange={handleSearchChange} className=\"search-input\" placeholder=\"input search loading with enterButton\" enterButton />\r\n\r\n            {\r\n                todos.filter(searched(keyword)).map(\r\n                    todo =>  \r\n                        <EachTodo \r\n                            key={todo.id} \r\n                            todo={todo} \r\n                            removeTask={removeTask}\r\n                            completeTask={completeTask}\r\n                        />\r\n                    \r\n                )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllTodoList;\r\n","import React, {useState} from \"react\";\r\nimport { DatePicker } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport AllTodoList from './all-todo-list.component';\r\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n\r\nconst AddToDo = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [date, setDate] = useState(moment()._d)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const saveTask = (e) => {\r\n        e.preventDefault()\r\n        let tasks = []\r\n        if(typeof window !== undefined) {\r\n            if(localStorage.getItem('tasks')) {\r\n                tasks = JSON.parse(localStorage.getItem(\"tasks\"))\r\n            }\r\n            tasks.push({\r\n                title,\r\n                date,\r\n                id: new Date(),\r\n                status: false\r\n            })\r\n            localStorage.setItem('tasks', JSON.stringify(tasks))\r\n            \r\n            dispatch({\r\n                type: \"ADD_TO_TASKS\",\r\n                payload: tasks\r\n            })\r\n            setTitle('')\r\n        }\r\n    }\r\n\r\n    const completeAllTasks = () => {\r\n        let tasks = []\r\n        if(typeof window !== undefined) {\r\n            if(localStorage.getItem('tasks')) {\r\n                tasks = JSON.parse(localStorage.getItem(\"tasks\"))\r\n            }\r\n            tasks.map((todo, i) => {\r\n                tasks[i].status = true\r\n            });\r\n            localStorage.setItem('tasks', JSON.stringify(tasks))\r\n            \r\n            dispatch({\r\n                type: \"ADD_TO_TASKS\",\r\n                payload: tasks\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleChangeTitle = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n    \r\n    const handleChangeDate = (e) => {\r\n        if(e) { setDate(e._d) }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex-between-center\">\r\n                <div className=\"col-side\">\r\n                    <button onClick={completeAllTasks} className=\"btn btn-success\"><i className=\"fas fa-check\"></i>All</button>\r\n                </div>\r\n                <form onSubmit={saveTask} className=\"flex-between-center add-form\">\r\n                    <div className=\"d-flex col-center-input\">\r\n                        <input \r\n                            className=\"add-task-input\" \r\n                            value={title} \r\n                            onChange={handleChangeTitle}\r\n                            type=\"text\" \r\n                            placeholder=\"Add task\" \r\n                            required\r\n                        />\r\n                        <button type=\"submit\" className=\"btn btn-success left-radius-none\"><i className=\"fas fa-pencil-alt\"></i></button>\r\n                    </div>\r\n                    <div className=\"col-side-date\">\r\n                        <DatePicker defaultValue={moment()} onChange={handleChangeDate} format={dateFormatList} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <AllTodoList/>\r\n        </>\r\n    );\r\n}\r\nexport default AddToDo;","import './App.css';\nimport 'antd/dist/antd.css';\nimport AddToDo from './components/add-to-do.component';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center m-5 h1\">My Todo List</h1>\n      <AddToDo/>\n    </div>\n  );\n}\n\nexport default App;\n","let initialState = [];\r\n\r\nif(typeof window !== 'undefined') {\r\n    if(localStorage.getItem(\"tasks\")) {\r\n        initialState = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    } else {\r\n        initialState = []\r\n    }\r\n}\r\n\r\nexport const todoReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_TO_TASKS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {todoReducer} from './todoReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    todos: todoReducer\r\n});\r\n\r\nexport default rootReducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './redux/reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer, composeWithDevTools())\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}